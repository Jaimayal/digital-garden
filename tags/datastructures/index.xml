<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>datastructures on</title><link>https://jaimayal.github.io/digital-garden/tags/datastructures/</link><description>Recent content in datastructures on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jaimayal.github.io/digital-garden/tags/datastructures/index.xml" rel="self" type="application/rss+xml"/><item><title>Array</title><link>https://jaimayal.github.io/digital-garden/notes/Array/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Array/</guid><description>Un Array es una estructura de datos de tamaño arreglado que guarda informacion de forma continua en memoria, una detras de la otra.</description></item><item><title>ArrayBuffer</title><link>https://jaimayal.github.io/digital-garden/notes/ArrayBuffer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/ArrayBuffer/</guid><description>Efectivamente es bsatante parecida a un [[notes/Linked List]], otra forma de llamarla es RingBuffer.
En esta estructura no se utiliza 0 como cabeza ni length como tail.</description></item><item><title>ArrayList</title><link>https://jaimayal.github.io/digital-garden/notes/ArrayList/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/ArrayList/</guid><description>Combina lo mejor del mundo del [[notes/Array]] y del [[notes/Linked List]].
Acceso a un elemento con O(1) Puede crecer y cambiar de tamaño Esto es posible debido a que:</description></item><item><title>Hash Table</title><link>https://jaimayal.github.io/digital-garden/notes/Hash-Table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Hash-Table/</guid><description>Es una estructura de datos que sirve para ordenar elementos con combinacion de diferentes estructuras de datos, usualmente, es una combinacion entre un array y diferentes tipos de listas.</description></item><item><title>Linked List</title><link>https://jaimayal.github.io/digital-garden/notes/Linked-List/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Linked-List/</guid><description>En comparacion con un [[notes/Array]] este si permite eliminar e insertar elementos (mas alla de solo sobreescribirlos). Ademas puede crecer de tamaño y reducirlo como le apetezca.</description></item><item><title>Queue</title><link>https://jaimayal.github.io/digital-garden/notes/Queue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Queue/</guid><description>Es una estructura de datos fundamental basada en FIFO (First in, First Out). Es decir, el primero que este en ella es el primero que va a salir, tal como una cola en la vida real.</description></item><item><title>Stack</title><link>https://jaimayal.github.io/digital-garden/notes/Stack/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Stack/</guid><description>La estructura de datos contraria a un Queue, sigue el principio FIFO (First in, First out) y funciona tal cual lo haria una pila de cosas en la vida real.</description></item></channel></rss>