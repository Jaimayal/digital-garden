<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>solid on</title><link>https://jaimayal.github.io/digital-garden/tags/solid/</link><description>Recent content in solid on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jaimayal.github.io/digital-garden/tags/solid/index.xml" rel="self" type="application/rss+xml"/><item><title>Principio de Inversion de Dependencias</title><link>https://jaimayal.github.io/digital-garden/notes/Principio-de-Inversion-de-Dependencias/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Principio-de-Inversion-de-Dependencias/</guid><description>Surge como resultado de cumplir el principio Open/Closed y la Sustitucion de Barbara Liskov.
Dicta que, si se busca flexibilidad y extensibilidad ni los modulos de alto nivel ni los de bajo nivel debeben de trabajar con interfaces intermedias para que se pueda extender a futuro y incremente la flexibilidad de mis colaboradores.</description></item><item><title>Principio de Segregacion de Interfaces</title><link>https://jaimayal.github.io/digital-garden/notes/Principio-de-Segregacion-de-Interfaces/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Principio-de-Segregacion-de-Interfaces/</guid><description>Es un principio que dicta que una clase no debe conocer nada mas alla de lo que le compete con otra clase con la que colabora.</description></item><item><title>Principio de Sustitucion de Liskov</title><link>https://jaimayal.github.io/digital-garden/notes/Principio-de-Sustitucion-de-Liskov/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Principio-de-Sustitucion-de-Liskov/</guid><description>Cualquier subclase debe sustituir de forma satisfactoria a una clase padre dentro de una jerarquia, sin cambiar de forma exagerada su comportamiento</description></item><item><title>Principio Open-Closed</title><link>https://jaimayal.github.io/digital-garden/notes/Principio-Open-Closed/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Principio-Open-Closed/</guid><description>Es el Objetivo del Dise√±o Orientado a Objetos.
Dicta que: *Todas las partes del paradigma orientaod a objetos deberian estar abiertas a la extension, cerradas a la modificacion.</description></item></channel></rss>