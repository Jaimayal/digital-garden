<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>softwaredev on</title><link>https://jaimayal.github.io/digital-garden/tags/softwaredev/</link><description>Recent content in softwaredev on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jaimayal.github.io/digital-garden/tags/softwaredev/index.xml" rel="self" type="application/rss+xml"/><item><title>The essentials of modern software engineering: Free the practices from the method prisons - Review</title><link>https://jaimayal.github.io/digital-garden/reference/The-essentials-of-modern-software-engineering-Free-the-practices-from-the-method-prisons/resenia/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/reference/The-essentials-of-modern-software-engineering-Free-the-practices-from-the-method-prisons/resenia/</guid><description>Volver a la Nota Principal
ðŸŒ± Idea Principal Debido a que el Software se encuentra presente en todos los aspectos de nuestra vida, este libro da la fundacion principal para construir una metodologia agil, tambien llamada escencia para que puedas dirigir equipos y desarrollar software de forma efectiva.</description></item><item><title>The essentials of modern software engineering: Free the practices from the method prisons - Notes</title><link>https://jaimayal.github.io/digital-garden/reference/The-essentials-of-modern-software-engineering-Free-the-practices-from-the-method-prisons/notas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/reference/The-essentials-of-modern-software-engineering-Free-the-practices-from-the-method-prisons/notas/</guid><description>Volver a la Nota Principal
1. From Programming to Software Engineering Este capitulo en particular busca definir de forma clara los conceptos de programador, desarrollador de software e ingeniero de software.</description></item><item><title>Analisis y DiseÃ±o</title><link>https://jaimayal.github.io/digital-garden/notes/Analisis-y-Disenio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Analisis-y-Disenio/</guid><description>Â¿QuÃ© es el DiseÃ±o? Es un proceso que se realiza en el Desarrollo de Software, su objetivo principal es reducir la complejidad de un software.</description></item><item><title>Buenas Practicas API REST</title><link>https://jaimayal.github.io/digital-garden/notes/Buenas-Practicas-API-REST/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Buenas-Practicas-API-REST/</guid><description>A continuacion una lista de buenas practicas recomendadas al desarrollar una RESTful API
Rest es orientado a recursos, por tanto, poner plurales en las URI Entregar codigos HTTP adecuados No anidar mas de tres niveles de recursos Tener un JSON claro de maximo dos - tres niveles de anidacion Integrar paginacion Integrar Sorting Integrar filtros Documentar la API Preferentemente OPEN API - Swagger Generar links de Navegacion Preferentemente siguiendo HATEOAS Asegurar la API definiendo roles (seguridad) Exportar clientes de demostracion Preferentemente usando POSTMAN Entregar errores definidos y verbosos Validacion de Campos Versionado de la API</description></item><item><title>Construccion de Software</title><link>https://jaimayal.github.io/digital-garden/notes/Construccion-de-Software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Construccion-de-Software/</guid><description>Se podria decir que es una variante del [[notes/Desarrollo de Software]], sin embargo, tiene un enfoque mucho mas especifico a las partes de [[notes/Programacion]] y [[notes/Pruebas]].</description></item><item><title>Definicion del Problema en un Desarrollo de Software</title><link>https://jaimayal.github.io/digital-garden/notes/Definicion-del-Problema-en-un-Desarrollo-de-Software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Definicion-del-Problema-en-un-Desarrollo-de-Software/</guid><description>La definicion del problema es el primer paso para lograr tener unos buenos [[notes/Prerequisitos]].
Busca identificar lo que se busca resolver de modo que, si se desarrolla un software, se garantiza que se ataque al problema correcto.</description></item><item><title>Desarrollo de Software</title><link>https://jaimayal.github.io/digital-garden/notes/Desarrollo-de-Software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Desarrollo-de-Software/</guid><description>El desarrollo de Software es toda una serie de procesos que se realizan con el fin de desarrollar un software de fin a fin.</description></item><item><title>Despliegue</title><link>https://jaimayal.github.io/digital-garden/notes/Despliegue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Despliegue/</guid><description>Es uno de los procesos terminales que ocurre en el ciclo de Desarrollo de Software, busca crear un entorno de produccion para que los usuarios finales puedan utilizar el software.</description></item><item><title>Docker</title><link>https://jaimayal.github.io/digital-garden/notes/Docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Docker/</guid><description>Es una tecnologia que te permite crear contenedores (variacion de maquinas virtuales). Propone contenedores muy ligeros que sirven para poder guardar un conjunto de tecnologias, configuracion y todo lo que se necesario para que el funcionamiento de un Software</description></item><item><title>Dominio de Negocio</title><link>https://jaimayal.github.io/digital-garden/notes/Dominio-de-Negocio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Dominio-de-Negocio/</guid><description>Comprende todos esas actividades que realiza una empresa, organizacion, etc como objetivo para satisfacer necesidades (y usualmente, generar capital).
Cada empresa tiene un diferente dominio de negocio, y entenderlo es de vital importancia para poder aplicar bien la Ingenieria del Software.</description></item><item><title>Estrategias de Clasificacion a partir del Modelo del Dominio (Encontrar clases)</title><link>https://jaimayal.github.io/digital-garden/notes/Estrategias-de-Clasificacion-a-partir-del-Modelo-del-Dominio-Encontrar-clases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Estrategias-de-Clasificacion-a-partir-del-Modelo-del-Dominio-Encontrar-clases/</guid><description>Existen muchas estrategias para encontrar las clases a partir del Modelo del Dominio, veamos las cinco mas relevantes y sus aportaciones:</description></item><item><title>Externacionalizacion</title><link>https://jaimayal.github.io/digital-garden/notes/Externacionalizacion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Externacionalizacion/</guid><description>La externalizacionc es un proceso en el cual se pasan las propiedades que son ajenas al codigo a archivos de texto plano que pueden ser importados hacia el codigo y poder ser utilizados de forma dinamica</description></item><item><title>Ingenieria del Software</title><link>https://jaimayal.github.io/digital-garden/notes/Ingenieria-del-Software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Ingenieria-del-Software/</guid><description>Es la implementacion de disciplinas y practicas de la ingenieria (Como requierements engineering) para mejorar el Desarrollo de Software.
Inspirado de: resenia</description></item><item><title>Legibilidad del Codigo</title><link>https://jaimayal.github.io/digital-garden/notes/Legibilidad-del-Codigo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Legibilidad-del-Codigo/</guid><description>Es la disciplina encargada de escribir ya no las clases ni las partes especificas, es la parte del diseÃ±o que se enfoca a las lineas especificas de cada metodo, clase, etc.</description></item><item><title>Microservicios</title><link>https://jaimayal.github.io/digital-garden/notes/Microservicios/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Microservicios/</guid><description>Es un tipo de arquitectura de Software, algunas de sus caracteristicas principales son:
Dividir toda la solucion en multiples modulos llamados microservicios en el que cada uno resuelve una funcionalidad.</description></item><item><title>Modelo del Dominio</title><link>https://jaimayal.github.io/digital-garden/notes/Modelo-del-Dominio/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Modelo-del-Dominio/</guid><description>Es una representacion abstracta de lo que pasa en el mundo real, usualmente tambien es el primer modelo (dibujito, imagen, UML) y sirve para visualizar de forma clara como llega a haber colaboraciones entre los objetos de un problema.</description></item><item><title>Practicas - Ciclo de Vida</title><link>https://jaimayal.github.io/digital-garden/notes/Metodologias-de-Desarrollo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Metodologias-de-Desarrollo/</guid><description>Las practicas relacionadas con el ciclo de vida de un proyecto de software se refiere a la cantidad de tiempo que tendra cada paso del ciclo de creacion, la duracion que tendra, la relevancia y si es iterable o no.</description></item><item><title>Prerequisitos</title><link>https://jaimayal.github.io/digital-garden/notes/Prerequisitos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Prerequisitos/</guid><description>Definicion Es un conjunto de practicas que se realiza en el [[notes/Desarrollo de Software]] con el fin de reducir los riesgos, planear las partes criticas y garantizar la calidad desde el inicio de un proyecto.</description></item><item><title>Pruebas</title><link>https://jaimayal.github.io/digital-garden/notes/Pruebas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Pruebas/</guid><description>Es probablemente el proceso mas infravalorado por los estudiantes que aprenden el Desarrollo de Software.
Es absolutamente necesario si lo que se busca es trabajar en un entorno profesional.</description></item><item><title>Requisitos</title><link>https://jaimayal.github.io/digital-garden/notes/Requisitos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Requisitos/</guid><description>Es uno de los primeros procesos en el Desarrollo de Software. Ocurre cuando se establece comunicacion entre los Stakeholders y el equipo de desarrollo.</description></item><item><title>The essentials of modern software engineering: Free the practices from the method prisons</title><link>https://jaimayal.github.io/digital-garden/reference/The-essentials-of-modern-software-engineering-Free-the-practices-from-the-method-prisons/main/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/reference/The-essentials-of-modern-software-engineering-Free-the-practices-from-the-method-prisons/main/</guid><description>Libro que habla sobre las practicas y metodos creados por el SEMAT (Software Engineering Methods And Theory) con el fin de buscar una serie de practicas y consejos bases sobre las cuales construir metodologias de desarrollo agiles.</description></item><item><title>Validacion de Datos en API REST</title><link>https://jaimayal.github.io/digital-garden/notes/Java-Bean-Validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Java-Bean-Validation/</guid><description>Sirve para validar los datos que son insertados por un usuario, regularmente estos validadores se mantienen en el DTO y se manejan con anotaciones.</description></item></channel></rss>