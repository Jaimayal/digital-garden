<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ooad on</title><link>https://jaimayal.github.io/digital-garden/tags/ooad/</link><description>Recent content in ooad on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jaimayal.github.io/digital-garden/tags/ooad/index.xml" rel="self" type="application/rss+xml"/><item><title>Antipatron Descomposicion Funcional</title><link>https://jaimayal.github.io/digital-garden/notes/Antipatron-Descomposicion-Funcional/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Antipatron-Descomposicion-Funcional/</guid><description>Tambien llamado Functional Descomposition, concepto creado por William Brown, se refiere a una mala practica que puede ocurrir en el desarrollo de un programa que consiste en romper completamente el Principio General de Asignacion de Responsabilidades.</description></item><item><title>Diseño en Codigo</title><link>https://jaimayal.github.io/digital-garden/notes/Dise%C3%B1o-en-Codigo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Dise%C3%B1o-en-Codigo/</guid><description>El Diseño en el Codigo es la aplicacion mas basica del diseño en la [[notes/Programacion|programacion]] y contempla dos aspectos generales:</description></item><item><title>Diseño Modular</title><link>https://jaimayal.github.io/digital-garden/notes/-Dise%C3%B1o-Modular/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/-Dise%C3%B1o-Modular/</guid><description>Es el nivel posterior al Diseño en Codigo, aparte de ser codigo bien inspirado del modelo del dominio que es altamente legible, se agrega que son modulos (o piezas) de codigo que tienen un tamaño homogeneo con alta cohesion y poco acoplamiento.</description></item><item><title>Diseño orientado a Objetos</title><link>https://jaimayal.github.io/digital-garden/notes/-Dise%C3%B1o-orientado-a-Objetos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/-Dise%C3%B1o-orientado-a-Objetos/</guid><description>Nivel siguiente al $ Diseño Modular, ahora ya no solo son piezas bien inspiradas, legibles, poco acopladas y cohesivas, si no que se aprovechan los mecanismos de Polimorfismo y Herencia + Composicion para hacer jerarquias altamente reusables y flexibles respetando principios de la programacion orientada a objetos.</description></item><item><title>Nombres con Sentido</title><link>https://jaimayal.github.io/digital-garden/notes/Recomendaciones-de-Nombrado-para-mantener-un-buen-codigo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Recomendaciones-de-Nombrado-para-mantener-un-buen-codigo/</guid><description>Son una serie de heuristicas que se enfocan en el [[notes/Diseño en Codigo]] de bajo nivel. Particularmente, en el nombrado de las cosas.</description></item><item><title>Patron Experto en la Informacion</title><link>https://jaimayal.github.io/digital-garden/notes/Patron-Experto-en-la-Informacion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Patron-Experto-en-la-Informacion/</guid><description>Se dice que un objeto tiene obligaciones que son dadas por los datos que guarda. Sus obligaciones es ofrecer una interfaz publica que satisfasca las operaciones necesarias que otros objetos tienen que hacer con ese dato.</description></item><item><title>Principio General de Asignacion de Responsabilidades</title><link>https://jaimayal.github.io/digital-garden/notes/Principio-General-de-Asignacion-de-Responsabilidades/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Principio-General-de-Asignacion-de-Responsabilidades/</guid><description>Inspirate en el Mundo Real, pero se coherente y has que las clases hagan las operaciones que les corresponden con los datos que encapsulan.</description></item><item><title>Relaciones entre Clases (Gestion de Dependencias)</title><link>https://jaimayal.github.io/digital-garden/notes/Relaciones-entre-Clases-Gestion-de-Dependencias/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jaimayal.github.io/digital-garden/notes/Relaciones-entre-Clases-Gestion-de-Dependencias/</guid><description>Dependencia y Relacion son sinonimos en la Programacion Orientada a Objetos. Ambas se refieren a las colaboraciones que pueden existir entre las clases de una aplicacion.</description></item></channel></rss>